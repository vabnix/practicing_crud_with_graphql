type Student {
    id: ID!
    firstName: String
    lastName: String
    className: String
    section: String
    rollNumber: Int
}

input StudentInput {
    id: ID
    firstName: String!
    lastName: String!
    className: String!
    section: String!
    rollNumber: Int!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    totalElements: Int!
    totalPages: Int!
}

type StudentPage {
    content: [Student!]!
    pageInfo: PageInfo!
}

input GraphQLPageRequest {
    page: Int = 0
    size: Int = 10
    sort: [String!] = []
}

type Query {
    allStudents: [Student]
    paginatedStudents(pageRequest: GraphQLPageRequest): StudentPage!
    studentById(id: ID!): Student
}

type Mutation {
    addStudent(student: StudentInput!): Student
    updateStudent(student: StudentInput!): Student
}